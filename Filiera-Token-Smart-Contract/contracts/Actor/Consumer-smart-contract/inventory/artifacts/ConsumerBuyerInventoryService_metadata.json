{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_consumerBuyerInventoryStorage",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_consumerService",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "message",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "quantity",
						"type": "uint256"
					}
				],
				"name": "ConsumerBuyerCheesePieceAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "message",
						"type": "string"
					}
				],
				"name": "ConsumerBuyerCheesePieceDeleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "message",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "quantity",
						"type": "uint256"
					}
				],
				"name": "ConsumerBuyerCheesePieceEdited",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_walletRetailer",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_walletConsumerBuyer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id_CheesePiece",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_weight",
						"type": "uint256"
					}
				],
				"name": "addCheesePiece",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_consumerBuyerInventoryStorage",
						"type": "address"
					}
				],
				"name": "changeConsumerBuyerCheesePieceStorage",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_consumerService",
						"type": "address"
					}
				],
				"name": "changeConsumerBuyerService",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id_CheesePieceAcquistato",
						"type": "uint256"
					}
				],
				"name": "getCheesePiece",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_walletConsumerBuyer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id_CheesePieceAcquistato",
						"type": "uint256"
					}
				],
				"name": "getPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "walletConsumer",
						"type": "address"
					}
				],
				"name": "getPurchasedCheesePieceByConsumer",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "walletRetailer",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "weight",
								"type": "uint256"
							}
						],
						"internalType": "struct ConsumerBuyerInventoryStorage.CheesePiece[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_walletConsumerBuyer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id_CheesePieceAcquistato",
						"type": "uint256"
					}
				],
				"name": "getWalletRetailer",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_walletConsumerBuyer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id_CheesePieceAcquistato",
						"type": "uint256"
					}
				],
				"name": "getWeight",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_walletConsumerBuyer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id_CheesePieceAcquistato",
						"type": "uint256"
					}
				],
				"name": "isCheesePiecePresent",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addCheesePiece(address,address,uint256,uint256,uint256)": {
					"notice": "Tale funzione viene chiamata dal TransactionManager per inserire il CheesePiece venduto dal Retailer al ConsumerBuyer  I controlli vengono fatti tutti all'interno del TransactionManager per la verifica dell'esistenza dei due interessati  - Ammettiamo che i controlli sul prodotto vengono già fatti a monte  - verifichiamo che il ConsumerBuyer e il Retailer esistono  - verifichiamo che il CheesePiece associato al Retailer esiste  - Aggiungiamo questi dati all'interno del Inventory "
				},
				"isCheesePiecePresent(address,uint256)": {
					"notice": "Verifica che il CheesePiece è presente all'interno dell'inventario  - Verifica che l'id non sia nullo e che sia maggiore di 0 e che coincida con l'elemento "
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Filiera-Token-Smart-Contract/contracts/Actor/Consumer-smart-contract/inventory/ConsumerBuyerInventoryService.sol": "ConsumerBuyerInventoryService"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
			"keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
			"license": "MIT",
			"urls": [
				"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
				"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
			"license": "MIT",
			"urls": [
				"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
				"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
				"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"Filiera-Token-Smart-Contract/contracts/Actor/Consumer-smart-contract/ConsumerService.sol": {
			"keccak256": "0xf713c62db55cac7091662e81e396d6c0304d173df7f75b6e558205c82e38bdb6",
			"license": "MIT",
			"urls": [
				"bzz-raw://85ae9194706d82baa1a97885eb796eb73633649a21ee05aff99f8a523aa37405",
				"dweb:/ipfs/QmcLLdL2hhELZTDHwULkwViP2xCLDsGV2rd2iy2oj8Pov7"
			]
		},
		"Filiera-Token-Smart-Contract/contracts/Actor/Consumer-smart-contract/ConsumerStorage.sol": {
			"keccak256": "0x8b258f679be5434378860727baf71944df67df886640fb056db55755f5096fbf",
			"license": "MIT",
			"urls": [
				"bzz-raw://452071aad0d502c50efba0fbd18a289db504708ee3440cfb000e68677fcf6e1f",
				"dweb:/ipfs/QmYc6JrYwxs7uk5t46K3rd5inG9onUTqaW4RkPwZvNDGpD"
			]
		},
		"Filiera-Token-Smart-Contract/contracts/Actor/Consumer-smart-contract/inventory/ConsumerBuyerInventoryService.sol": {
			"keccak256": "0xf199055eb13fd0f23bf2c8ba1957f1794d5028bb659aa8214abd13146556a038",
			"license": "MIT",
			"urls": [
				"bzz-raw://d00c809baf8a36088f94102e4b634c5728a56c00fb52bc6f7f4a3bc246e8a3de",
				"dweb:/ipfs/QmatYwUH97v8xtTRoh2AfPjhtxF2pkWYVGEFNTjQopvQ8c"
			]
		},
		"Filiera-Token-Smart-Contract/contracts/Actor/Consumer-smart-contract/inventory/ConsumerBuyerInventoryStorage.sol": {
			"keccak256": "0x5d780e0bb647aaa17095a541aacf286c4f589400ccf93d3e2596cb3dfc658731",
			"license": "MIT",
			"urls": [
				"bzz-raw://0bf0789dec84f750b8ed6353407bad6b4804676ca1c1a5de744a2175e5f1c6fe",
				"dweb:/ipfs/QmeZggvBf1m3cHbwgSGYZaqouDUN5AMNre5Q7ikfSgxTW3"
			]
		},
		"Filiera-Token-Smart-Contract/contracts/Actor/IUserStorageInterface.sol": {
			"keccak256": "0xae0b245125f0e611e9ae29c1970d635b4a982787afafab5290759d9ef7d821c8",
			"license": "MIT",
			"urls": [
				"bzz-raw://793118144f90c043aa0cde1c1a65a0c2e7dd8657dc71ca869ac29492605fa108",
				"dweb:/ipfs/QmRFZhVDtbAC27oFHQVDrzgM9FLLHgcK7peiYh4U4P4bL1"
			]
		},
		"Filiera-Token-Smart-Contract/contracts/Service/Filieratoken.sol": {
			"keccak256": "0xcb2e21f42a384efcf6bf6e72bd5b5d5cd3b919a67b9d3afe7e4be79cbdd92fae",
			"license": "MIT",
			"urls": [
				"bzz-raw://ee169673c236b45853fed29f2be2e5b9e30db35dff8658900e7ec37be2a0155a",
				"dweb:/ipfs/QmYWm26mnSaRmT2fYadXWYRtQw7rhtsw9pW9BwXr6aYFrQ"
			]
		}
	},
	"version": 1
}