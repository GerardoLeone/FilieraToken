{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_fullName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_password",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_email",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "walletRetailer",
						"type": "address"
					}
				],
				"name": "addUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "walletRetailer",
						"type": "address"
					}
				],
				"name": "deleteUser",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "walletRetailer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "walletRetailer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "getEmail",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "walletRetailer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "getFullName",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "walletRetailer",
						"type": "address"
					}
				],
				"name": "getId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getListAddress",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "walletRetailer",
						"type": "address"
					}
				],
				"name": "getUser",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "walletRetailer",
						"type": "address"
					}
				],
				"name": "isUserPresent",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "walletRetailer",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_email",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_password",
						"type": "string"
					}
				],
				"name": "loginUser",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "walletRetailer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					}
				],
				"name": "updateBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addUser(string,string,string,address)": {
					"notice": "addUser() effettuiamo la registrazione dell'utente Retailer "
				},
				"getBalance(address,uint256)": {
					"notice": "- Funzione getBalance() attraverso l'address del Retailer riusciamo a recuperare il suo Balance"
				},
				"getEmail(address,uint256)": {
					"notice": "- Funzione getEmail() attraverso l'address del Retailer riusciamo a recuperare la sua Email "
				},
				"getFullName(address,uint256)": {
					"notice": "- Funzione getFullName() attraverso l'address del Retailer riusciamo a recuperare il suo FullName"
				},
				"getId(address)": {
					"notice": "- Funzione getId() attraverso l'address del Retailer riusciamo a recuperare il suo ID"
				},
				"getListAddress()": {
					"notice": "Ritorna la Lista degli address"
				},
				"getUser(address)": {
					"notice": "getUser(walletRetailer) :  Retailer visualizza le sue informazioni principali - email, password , fullName , balance "
				},
				"loginUser(address,string,string)": {
					"notice": "LoginUser() effettua il login dell'utente  La comparazione Hash tra (email e password) di input e quelli salvati return true se la comparazione è vera, La comparazione è falsa se l'hashing non risulta valido"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Actor/Retailer-smart-contract/RetailerStorage.sol": "RetailerStorage"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Actor/IUserStorageInterface.sol": {
			"keccak256": "0xc4f5e58158b13ff68c4fe49d72a2e48c560818ddbfc965b0733932d540b50e09",
			"license": "MIT",
			"urls": [
				"bzz-raw://f1884e9167a862d283cbfa84ea8fad1c65e344deb6e2699e6264852c257b1be8",
				"dweb:/ipfs/QmWtfGJ23czQ2HSjg7buPSCsawgJ57ypcXQpZQsnZCDYu8"
			]
		},
		"contracts/Actor/Retailer-smart-contract/RetailerStorage.sol": {
			"keccak256": "0x4eacecfdeaf13cd79a701777e615684dcb816d6482080132c94f8cac118dfafa",
			"license": "MIT",
			"urls": [
				"bzz-raw://c09fe148f4a4d99f7eef3eaf5ac0f10e8df8e723302216ce97d0a97b19cadf85",
				"dweb:/ipfs/QmWQWraxshKnsNPJGXPaQuKh3cUqySvtL1nJcP3FLRFm9C"
			]
		}
	},
	"version": 1
}