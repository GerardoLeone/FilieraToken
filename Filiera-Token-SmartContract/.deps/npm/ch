/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/ch@0.3.0/lib/concurrency-handler.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var createCategory,next,duplicateDebugData,globalRunCount=0,categoryRunCount={},queues={},max={},consumed={},defaultCategory=null,defaults={};createCategory=function(e){return void 0===e&&(null===defaultCategory&&(defaultCategory=""),e=defaultCategory),e=String(e),defaults[e]||(queues[e]=[],categoryRunCount[e]=0,max[e]=1,consumed[e]=0,defaults[e]={amount:1,curryRelease:!0,debug:!1,arguments:null,unshift:!1,onDrain:null}),null===defaultCategory&&(defaultCategory=e),e},next=function(e){var t,a;if(queues[e].length)if(t=queues[e][0],consumed[e]+t.amount>max[e]){if(t.amount>max[e])throw"concurrency-handler.setMax(): next: RUNTIME ERROR: "+e+" item with amount "+t.amount+" exceeds maximum resources of "+max[e]}else queues[e].shift(),t.inQueue=!1,consumed[e]+=t.amount,a=t.arguments,t.curryRelease&&a.unshift(t.release),t.debug&&(t.started=new Date,t.running=!0,t.globalRunIndex=globalRunCount,t.categoryRunIndex=categoryRunCount[e],duplicateDebugData(t)),globalRunCount+=1,categoryRunCount[e]+=1,t.callback.apply(t.context,a),next(e);else consumed[e]||"function"!=typeof defaults[e].onDrain||defaults[e].onDrain(e)},duplicateDebugData=function(e){var t;for(t in e.release.debug={},e)"release"!==t&&(e.release.debug[t]=e[t])},exports.ch={setMax:function(e,t){if(void 0===t&&(t=e,e=void 0),0>=(t=Number(t)))throw"concurrency-handler.setMax(): Invalid amount: "+t;return e=createCategory(e),max[e]=t,next(e),this},getMax:function(e){return e=createCategory(e),max[e]},onDrain:function(e,t){return void 0===t&&(t=e,e=void 0),e=createCategory(e),defaults[e].onDrain=t,this},getRunning:function(e){return e=createCategory(e),consumed[e]},getFree:function(e){return e=createCategory(e),max[e]-consumed[e]},setDefaultCategory:function(e){return defaultCategory=createCategory(e),this},setCategoryDefaults:function(e,t){var a;for(a in void 0===t&&(t=e,e=void 0),e=createCategory(e),t)defaults[e][a]=t[a];return this},queue:function(e){var t,a={};if(!e instanceof Object)throw"concurrency-handler.setMax(): queue: expected configuration parameter, please see documentation";if(!e.callback instanceof Function)throw"concurrency-handler.setMax(): queue: config requires a callback, please see documentation";return a.category=createCategory(e.category),t=defaults[a.category],a.callback=e.callback,a.context=e.context||t.context||{},a.arguments=e.arguments instanceof Array?e.arguments:t.arguments||[],a.curryRelease=e.hasOwnProperty("curryRelease")?e.curryRelease:t.curryRelease,a.amount=e.hasOwnProperty("amount")?e.amount:t.amount,a.debug=e.hasOwnProperty("debug")?e.debug:t.debug,a.unshift=e.hasOwnProperty("unshift")?e.unshift:t.unshift,a.inQueue=!0,a.released=!1,a.release=function(){if(!a.released){if(a.debug&&(a.running=!1,a.completed=new Date),a.inQueue){var e=queues[a.category].indexOf(a);-1!==e&&queues[a.category].splice(e,1)}else consumed[a.category]-=a.amount;a.released=!0,a.debug&&duplicateDebugData(a),next(a.category)}},a.debug&&(a.started=null,a.running=!1,a.completed=!1,a.getIndex=function(){return queues[a.category].indexOf(a)},a.queued=new Date,duplicateDebugData(a)),a.unshift?queues[a.category].unshift(a):queues[a.category].push(a),next(a.category),a.release}};
//# sourceMappingURL=/sm/2734a8b222bf6021b69d0791649c66dc0a42a318a0ea88f743b9b2ea2507f2c8.map